import "~/styles/globals.css";

import { type Metadata } from "next";
import { Geist } from "next/font/google";
import { headers } from "next/headers";

import { TRPCReactProvider } from "~/trpc/react";
import { HeaderServer } from '~/app/_components/server/HeaderServer'
import { SidebarProvider, SidebarTrigger } from "~/components/ui/sidebar"
import AppSidebar from "~/app/_components/server/AppSidebar";  // Default import
import { auth } from "~/lib/auth"; // server side Better-Auth instance

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  const session = await auth.api.getSession({
    headers: await headers()
  });

  const isLoggedIn = !!session?.user;

  const loggedInLayout = (
    <SidebarProvider>
      <AppSidebar />
      <main className="flex-1">
        <div className="flex justify-between items-center p-4 border-b">
          <SidebarTrigger />
          <div className="flex-1">
            <HeaderServer />
          </div>
        </div>
        <div className="p-4">
          {/* Only wrap the content that needs TRPC client */}

          {children}

        </div>
      </main>
    </SidebarProvider>
  );

  const loggedOutLayout = (
    <div>
      <HeaderServer />
      <main className="p-4">

        {children}

      </main>
    </div>
  );

  return (
    <html lang="en" className={`${geist.variable}`}>
      <TRPCReactProvider>

        <body>
          {isLoggedIn ? loggedInLayout : loggedOutLayout}
        </body>
      </TRPCReactProvider>
    </html>
  );
}